name: Build & SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_DIR: build_wrapper_output 
      SONAR_ORG: ekuzm
      SONAR_PROJECT_KEY: ekuzm_cpp-labs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4

      - name: Install Sonar Scanner
        uses: SonarSource/sonarqube-scan-action/install-sonar-scanner@v4

      - name: Build labs with coverage
        run: |
          for lab in lab1 lab2 lab3 lab4; do
            echo "Building $lab"
            rm -rf $lab/build
            mkdir -p $lab/build
            cmake -S $lab -B $lab/build -DCMAKE_CXX_FLAGS="--coverage"
            build-wrapper-linux-x86-64 --out-dir $BUILD_WRAPPER_DIR/$lab cmake --build $lab/build --config Release
          done

      - name: Run SonarCloud scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          sonar-scanner \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.sources=lab1,lab2,lab3,lab4 \
            -Dsonar.cfamily.compile-commands=$BUILD_WRAPPER_DIR/compile_commands.json \
            -Dsonar.cfamily.gcov.reportsPath=lab1/build,lab2/build,lab3/build,lab4/build
