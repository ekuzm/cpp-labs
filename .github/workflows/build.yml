name: Build & SonarCloud (per-lab)

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
      SONAR_ORG: ekuzm

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4

      - name: Build lab1
        run: |
          rm -rf build
          mkdir build
          cmake -S lab1 -B build
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build --config Release

      - name: SonarCloud scan lab1
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-labs_lab1
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab1
            -Dsonar.cfamily.compile-commands=${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json

      - name: Build lab2
        run: |
          rm -rf build
          mkdir build
          cmake -S lab2 -B build
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build --config Release

      - name: SonarCloud scan lab2
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-labs_lab2
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab2
            -Dsonar.cfamily.compile-commands=${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json

      - name: Build lab3
        run: |
          rm -rf build
          mkdir build
          cmake -S lab3 -B build
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build --config Release

      - name: SonarCloud scan lab3
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-labs_lab3
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab3
            -Dsonar.cfamily.compile-commands=${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json

      - name: Build lab4
        run: |
          rm -rf build
          mkdir build
          cmake -S lab4 -B build
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build --config Release

      - name: SonarCloud scan lab4
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-labs_lab4
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab4
            -Dsonar.cfamily.compile-commands=${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json
