name: Build & SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      SONAR_ORG: ekuzm
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4

      # --- Build, run and generate coverage for each lab ---
      - name: Build, run, and collect coverage for lab1
        run: |
          rm -rf lab1/build lab1/build_wrapper
          mkdir lab1/build
          cmake -S lab1 -B lab1/build -DCMAKE_CXX_FLAGS="--coverage"
          build-wrapper-linux-x86-64 --out-dir lab1/build_wrapper cmake --build lab1/build --config Release
          # Run binary to generate .gcda files
          ./lab1/build/lab1 || true
          # Collect coverage info
          lcov --capture --directory lab1/build --output-file lab1/coverage.info || true

      - name: Build, run, and collect coverage for lab2
        run: |
          rm -rf lab2/build lab2/build_wrapper
          mkdir lab2/build
          cmake -S lab2 -B lab2/build -DCMAKE_CXX_FLAGS="--coverage"
          build-wrapper-linux-x86-64 --out-dir lab2/build_wrapper cmake --build lab2/build --config Release
          ./lab2/build/lab2 || true
          lcov --capture --directory lab2/build --output-file lab2/coverage.info || true

      - name: Build, run, and collect coverage for lab3
        run: |
          rm -rf lab3/build lab3/build_wrapper
          mkdir lab3/build
          cmake -S lab3 -B lab3/build -DCMAKE_CXX_FLAGS="--coverage"
          build-wrapper-linux-x86-64 --out-dir lab3/build_wrapper cmake --build lab3/build --config Release
          ./lab3/build/lab3 || true
          lcov --capture --directory lab3/build --output-file lab3/coverage.info || true

      - name: Build, run, and collect coverage for lab4
        run: |
          rm -rf lab4/build lab4/build_wrapper
          mkdir lab4/build
          cmake -S lab4 -B lab4/build -DCMAKE_CXX_FLAGS="--coverage"
          build-wrapper-linux-x86-64 --out-dir lab4/build_wrapper cmake --build lab4/build --config Release
          ./lab4/build/lab4 || true
          lcov --capture --directory lab4/build --output-file lab4/coverage.info || true

      # --- SonarCloud analysis ---
      - name: SonarCloud scan lab1
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-lab1
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab1
            -Dsonar.cfamily.compile-commands=lab1/build_wrapper/compile_commands.json
            -Dsonar.cfamily.gcov.reportsPath=lab1/coverage.info

      - name: SonarCloud scan lab2
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-lab2
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab2
            -Dsonar.cfamily.compile-commands=lab2/build_wrapper/compile_commands.json
            -Dsonar.cfamily.gcov.reportsPath=lab2/coverage.info

      - name: SonarCloud scan lab3
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-lab3
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab3
            -Dsonar.cfamily.compile-commands=lab3/build_wrapper/compile_commands.json
            -Dsonar.cfamily.gcov.reportsPath=lab3/coverage.info

      - name: SonarCloud scan lab4
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ekuzm_cpp-lab4
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=lab4
            -Dsonar.cfamily.compile-commands=lab4/build_wrapper/compile_commands.json
            -Dsonar.cfamily.gcov.reportsPath=lab4/coverage.info
